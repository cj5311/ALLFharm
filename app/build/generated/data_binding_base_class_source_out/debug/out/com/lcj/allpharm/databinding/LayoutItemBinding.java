// Generated by view binder compiler. Do not edit!
package com.lcj.allpharm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lcj.allpharm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView takNameText;

  @NonNull
  public final TextView yakCodeText;

  @NonNull
  public final TextView yakCodeTv;

  @NonNull
  public final ImageView yakIv;

  @NonNull
  public final TextView yakNameTv;

  @NonNull
  public final TextView yakVendorText;

  @NonNull
  public final TextView yakVendorTv;

  private LayoutItemBinding(@NonNull ConstraintLayout rootView, @NonNull TextView takNameText,
      @NonNull TextView yakCodeText, @NonNull TextView yakCodeTv, @NonNull ImageView yakIv,
      @NonNull TextView yakNameTv, @NonNull TextView yakVendorText, @NonNull TextView yakVendorTv) {
    this.rootView = rootView;
    this.takNameText = takNameText;
    this.yakCodeText = yakCodeText;
    this.yakCodeTv = yakCodeTv;
    this.yakIv = yakIv;
    this.yakNameTv = yakNameTv;
    this.yakVendorText = yakVendorText;
    this.yakVendorTv = yakVendorTv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tak_name_text;
      TextView takNameText = ViewBindings.findChildViewById(rootView, id);
      if (takNameText == null) {
        break missingId;
      }

      id = R.id.yak_code_text;
      TextView yakCodeText = ViewBindings.findChildViewById(rootView, id);
      if (yakCodeText == null) {
        break missingId;
      }

      id = R.id.yak_code_tv;
      TextView yakCodeTv = ViewBindings.findChildViewById(rootView, id);
      if (yakCodeTv == null) {
        break missingId;
      }

      id = R.id.yak_iv;
      ImageView yakIv = ViewBindings.findChildViewById(rootView, id);
      if (yakIv == null) {
        break missingId;
      }

      id = R.id.yak_name_tv;
      TextView yakNameTv = ViewBindings.findChildViewById(rootView, id);
      if (yakNameTv == null) {
        break missingId;
      }

      id = R.id.yak_vendor_text;
      TextView yakVendorText = ViewBindings.findChildViewById(rootView, id);
      if (yakVendorText == null) {
        break missingId;
      }

      id = R.id.yak_vendor_tv;
      TextView yakVendorTv = ViewBindings.findChildViewById(rootView, id);
      if (yakVendorTv == null) {
        break missingId;
      }

      return new LayoutItemBinding((ConstraintLayout) rootView, takNameText, yakCodeText, yakCodeTv,
          yakIv, yakNameTv, yakVendorText, yakVendorTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
